install.packages("foreign")
install.packages("https://cran.r-project.org/src/contrib/Archive/foreign/foreign_0.8-79.tar.gz", repos = NULL, type = "source")
install.packages("installr")
library("installer")
library("installr")
check.for.updates.R()
install.R
install.R()
version
install.packages("https://cran.r-project.org/src/contrib/Archive/foreign/foreign_0.8-79.tar.gz", repos = NULL, type = "source")
install.packages("foreign", repos = NULL, type = "source")
install.packages("foreign")
library(foreign)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(foreign)
library(dplyr)
install.packages("readxl")
library(readxl)
setwd("C:/Users/user/Desktop/Programming/R-programming/Chapter-9")
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav")
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfate <- raw_welfare
head(welfate)
welfare <- raw_welfare
tail(welfare)
View(welfare)
dim(welfare)
str(welfare)
summary(welfare)
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
View(welfare)
## Income difference
class(welfare$sex)
table(welfare$sex)
# Check anomaly
table(is.na(welfare$sex))
# Assign names
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
# Check the income variable
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1000)
# Pre-processing
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(in.na(welfare$income))
table(is.na(welfare$income))
# Mean Income vs Sex
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income = mean(income))
sex_income
round(sex_income, 1)
ggplot(data = sex_income, aes(x = sex, y = mean_income)) + geom_col()
options()
pi
pi
sex_income
options(digits = 20); sex_income
options(digits = 20); sex_income
options(digits = 20)
sex_income
sex_income
options(digits = 20); sex_income
# Mean Income vs Sex
welfare$income
options(digits = 7)
# Mean Income vs Sex
welfare$income
sex_income$mean_income
sex_income
options(pillar.sigfig = 7)
sex_income
?pillar
## Income vs Age
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
# Pre-processing
table(is.na(welfare$birth))
# Make a derived variable about "age"
welfare$age <- 2015 - welfare$birth + 1
summ(welfare$age)
summary(welfare$age)
qplot(welfare$age)
# Make "income mean value" according to "age"
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
head(age_income)
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
## Age Group vs Income
# Make a derived variable "ageg"
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "young",
ifelse(age <= 59, "middle", "old")))
table(welfare$ageg)
qplot(welfare$ageg)
# Plot Mean Income vs Age Group
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) + geom_bar()
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) + geom_col()
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) +
geom_col() +
scale_x_discrete(limit = c("young", "middle", "old"))
## Age group, sex, income
# Make a derived varaible
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%
summarise(mean_income = mean(income))
sex_income
# Plotting
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +         # show both male and female in one column
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young", "middle", "old"))
## Age, sex, income
sex_age <- welfate %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
## Age, sex, income
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
head(sex_age)
## Age, sex, income
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(sex, age) %>%
summarise(mean_income = mean(income))
head(sex_age)
## Age, sex, income
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
head(sex_age)
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) + geom_line()
## Income vs Job
class(welfare$code_job)
table(welfare$code_job)
# Pre-processing
library(readxl)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names = T, sheet = 2)
head(list_job)
dim(list_job)
# Left-joining
welfare <- left_join(welfare, list_job, id = "code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
View(welfare)
