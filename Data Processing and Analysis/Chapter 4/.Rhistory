install.packages("foreign")
install.packages("https://cran.r-project.org/src/contrib/Archive/foreign/foreign_0.8-79.tar.gz", repos = NULL, type = "source")
install.packages("installr")
library("installer")
library("installr")
check.for.updates.R()
install.R
install.R()
version
install.packages("rJava")
install.packages("memoise")
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.2.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.1.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.0.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.76.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.76.8.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.75.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("KoNLP")
install.packages("KoNLP")
library(KoNLP)
install.packages("KoNLP")
install.packages("KoNLP")
find_rtools(T)
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP')
library(KoNLP)
devtools::install_github('haven-jeon/KoNLP')
install.packages("KoNLP")
devtools::install_github('haven-jeon/KoNLP')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP')
install.packages(c("survival", "sys"))
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
install.packages("rJava")
install.packages("memoise")
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
require(devtools)
install_version("backports", version = "1.1.8")
install.packages("rJava")
R.version
R.version()
R.version
library(rJava)
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jdk-14.0.2")
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
# prepare a dataset
install.packages("stringi")
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
# prepare a dataset
str(changeCode(korepop1))
# prepare a dataset
str(changeCode(korpop1))
library(dplyr)
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
str(changecode(kormap1))
str(changeCode(kormap1))
library(ggiraphExtra)
# make a Choropleth
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# prepare a map
library(ggplot2)
# make a Choropleth
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# make a Choropleth
options(encoding = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
options(encoding = "CP949")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# make a Choropleth
options(encoding = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
korpop1$name <- iconv(korpop1$name, to = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
library(kormaps2014)
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
library(kormaps2014)
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
korpop1$name <- iconv(korpop1$name, to = "CP949")
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
# prepare packages
install.packages("plothy")
# prepare packages
install.packages("plotly")
library(plotly)
# plot a graph
library(ggplot2)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
ggplotly(p)
p1 <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) + geom_bar(position = "dodge")
ggplotly(p1)
# prepare packages
install.packages("dygraph")
# prepare packages
install.packages("dygraphs")
library(dygraphs)
economics <- ggplot2::economics
head(economics)
library(xts)
eco <- xts(economics$unemploy, order.by = economics$data)
eco <- xts(economics$unemploy, order.by = economics$date)
head(eco)
dygraph(eco)
dygraph(eco) %>% dyRangeSelector()
# plot various graphs
eco_a <- xts(economics$psavert, order.by = economics$date)
eco_b <- xts(economics$unemploy/1000, order.by = economics$date)
eco2 <- cbind(eco_a, eco_b)
head(eco2)
colnames(eco2) <- c("psavert", "unemploy")
head(eco2)
dygraph(eco2) %>% dyRangeSelector()
##
library(httr)
library(rvest)
Sys.setlocale("LC_ALL", "English")
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = 'l',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(tail(data))
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(tail(data))
print(head(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(tail(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
orderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
View(data)
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
orderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(head(data))
print(head(data))
setwd("C:/Users/user/Desktop/Programming/R-programming/Data Processing and Analysis/Chapter 4")
df1 <- data.frame(x = c(1,2,3), y = c("Mr. Foo", "Ms. Bar", "Mr. Baz"), z = c(95,97,92),stringsAsFactors = TRUE)
df1
names(df1) <- NULL
df1
str(df1)
write.csv(df1, "b.csv")
(x <- read.csv("b.csv"))
(x <- read.csv("b.csv", header = FALSE))
df1 <- data.frame(x = c(1,2,3), y = c("Mr. Foo", "Ms. Bar", "Mr. Baz"), z = c(95,97,92),stringsAsFactors = TRUE)
write.csv(df1, "b.csv")
(x <- read.csv("b.csv", header = FALSE))
## NA
df2 <- data.frame(x = c(1,2,3), y = c("Mr. Foo", "Ms. Bar", "Mr. Baz"), z = c(95,"NIL",92),stringsAsFactors = TRUE)
df2
write.csv(df2, "c.csv")
x <- read.csv("c.csv")
x
str(x)
x <- read.csv("c.csv", stringsAsFactors = TRUE)
str(x)
## NA
df2 <- data.frame(x = c(1,2,3), y = c("Mr. Foo", "Ms. Bar", "Mr. Baz"), z = c(95,"NIL",92),stringsAsFactors = TRUE)
x <- df2
str(x)
is.na(x$score)
x <- read.csv("c.csv", stringsAsFactors = TRUE)
str(x)
x <- read.csv("c.csv", stringsAsFactors = TRUE, na.strings = c("NIL"))
str(x)
is.na(x$score)
dff <- read.csv("c.csv", stringsAsFactors = TRUE, na.strings = c("NIL"))
str(dff)
is.na(dff$score)
x <- read.csv("c.csv", stringsAsFactors = TRUE, na.strings = c("NIL"))
str(x)
is.na(x$score)
names(df2) <- c("id","name","score")
write.csv(df2, "c.csv")
x <- read.csv("c.csv", stringsAsFactors = TRUE, na.strings = c("NIL"))
str(x)
is.na(x$score)
## NA
df2 <- data.frame(x = c(1,2,3), y = c("Mr. Foo", "Ms. Bar", "Mr. Baz"), z = c(95,"NIL",92),stringsAsFactors = TRUE, row.names = FALSE)
write.csv(df2, "c.csv", row.names = FALSE)
x <- read.csv("c.csv", stringsAsFactors = TRUE, na.strings = c("NIL"))
str(x)
is.na(x$score)
write.csv(x, "d.csv", row.names = FALSE)
# save, load
x <- 1:5
y <- 6:10
save(x,y, file = "xy.RData")
load("C:/Users/user/Desktop/Programming/R-programming/Data Processing and Analysis/Chapter 4/xy.RData")
rm(list = ls())
load("xy.RData")
## rbind, cbindrbind
rbind(c(1,2,3), c(4,5,6))
(x <- data.frame(id = c(1,2), name = c("a","b"), stringsAsFactors = F))
source('C:/Users/user/Desktop/Programming/R-programming/Data Processing and Analysis/Chapter 4/data_manipulation.R', echo=TRUE)
(y <- rbind(c(3,"c")))
(y <- rbind(xmc(3,"c")))
(y <- rbind(x, c(3,"c")))
cbind(c(1,2,3), c(4,5,6))
(y <- cbind(x, greek = c("alpha", "beta")))
str(y)
(x <- data.frame(id = c(1,2), name = c("a","b"), stringsAsFactors = F))
(y <- cbind(x, greek = c("alpha", "beta"), stringAsFactors = T))
(y <- cbind(x, greek = c("alpha", "beta")))
str(y)
y <- cbind(x, greek = c("alpha", "beta"), stringAsFactors = T)
str(y)
?cbind
(x <- data.frame(id = c(1,2), name = c("a","b"), stringsAsFactors = F))
cbind(c(1,2,3), c(4,5,6))
y <- cbind(x, greek = c("alpha", "beta"), stringsAsFactors = T)
str(y)
?cbind
y
## Data Manipulation-2
# 'apply' functions
# apply()
sum(1:10)
d <- matrix(1:9, ncol = 3)
d
apply(d,2,sum)
apply(d,1,sum)
apply(d, 2, sum)
apply(d, c(1,2), sum)
head(iris)
apply(iris[, 1:4], 2, sum)
colSums(iris[, 1:4])
# lapply() for list
(result <- lapply(1:3, function(x)(x*2)))
result
result[[1]]
unlist(result)
(x <- list(a = 1:3, b = 4:6))
lapply(x, mean)
lapply(iris[, 1:4], mean)
colMeans(iris[, 1:4])
a <- colMeans(iris[, 1:4])
str(a)
str(lapply(iris[, 1:4], mean))
d <- as.data.frame(matrix(unlist(lapply(iris[,1:4], mean)), ncol = 4, byrow = T))
d
names(d) <- names(iris[, 1:4])
d
str(d)
str(colMeans(iris[, 1:4]))          # the reulst is returning values
data.frame(d.call(cbind, lapply(iris[, 1:4], mean)))
data.frame(do.call(cbind, lapply(iris[, 1:4], mean)))
str(data.frame(do.call(cbind, lapply(iris[, 1:4], mean))))
x <- list(data.frame(name = "foo", value 1), data.frame(name = "bar", value = 2))
x <- list(data.frame(name = "foo", value 1), data.frame(name = "bar", value = 2)
x <- list(data.frame(name = "foo", value 1), data.frame(name = "bar", value = 2))
x <- list(data.frame(name = "foo", value = 1), data.frame(name = "bar", value = 2))
unlist(x)
str(unlist(x))
do.call(rbind, x)
(x <- list(data.frame(name = "foo", value = 1), data.frame(name = "bar", value = 2)))
do.call(rbind, x)
