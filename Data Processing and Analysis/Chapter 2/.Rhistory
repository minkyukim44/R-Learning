install.packages("foreign")
install.packages("https://cran.r-project.org/src/contrib/Archive/foreign/foreign_0.8-79.tar.gz", repos = NULL, type = "source")
install.packages("installr")
library("installer")
library("installr")
check.for.updates.R()
install.R
install.R()
version
install.packages("rJava")
install.packages("memoise")
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.2.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.1.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.80.0.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.76.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.76.8.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("https://cran.r-project.org/src/contrib/Archive/KoNLP/KoNLP_0.75.tar.gz", repose = NULL, type = "source", INSTALL_opts = c('--no-lock'))
install.packages("KoNLP")
install.packages("KoNLP")
library(KoNLP)
install.packages("KoNLP")
install.packages("KoNLP")
find_rtools(T)
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP')
library(KoNLP)
devtools::install_github('haven-jeon/KoNLP')
install.packages("KoNLP")
devtools::install_github('haven-jeon/KoNLP')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP')
install.packages(c("survival", "sys"))
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
install.packages("rJava")
install.packages("memoise")
install.packages('devtools')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
require(devtools)
install_version("backports", version = "1.1.8")
install.packages("rJava")
R.version
R.version()
R.version
library(rJava)
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jdk-14.0.2")
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
devtools::install_github('haven-jeon/KoNLP', dependencies = TRUE, INSTALL_opts = '--no-lock')
# prepare a dataset
install.packages("stringi")
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
# prepare a dataset
str(changeCode(korepop1))
# prepare a dataset
str(changeCode(korpop1))
library(dplyr)
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
str(changecode(kormap1))
str(changeCode(kormap1))
library(ggiraphExtra)
# make a Choropleth
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# prepare a map
library(ggplot2)
# make a Choropleth
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# make a Choropleth
options(encoding = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
options(encoding = "CP949")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
# make a Choropleth
options(encoding = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
korpop1$name <- iconv(korpop1$name, to = "UTF-8")
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
library(kormaps2014)
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
korpop1 <- rename(korpop1, pop = 총인구_명, name = 행정구역별_읍면동)
library(kormaps2014)
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
korpop1$name <- iconv(korpop1$name, to = "CP949")
# prepare a dataset
str(changeCode(korpop1))    # change encoding utf-8 to cp949
# prepare packages
install.packages("plothy")
# prepare packages
install.packages("plotly")
library(plotly)
# plot a graph
library(ggplot2)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
ggplotly(p)
p1 <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) + geom_bar(position = "dodge")
ggplotly(p1)
# prepare packages
install.packages("dygraph")
# prepare packages
install.packages("dygraphs")
library(dygraphs)
economics <- ggplot2::economics
head(economics)
library(xts)
eco <- xts(economics$unemploy, order.by = economics$data)
eco <- xts(economics$unemploy, order.by = economics$date)
head(eco)
dygraph(eco)
dygraph(eco) %>% dyRangeSelector()
# plot various graphs
eco_a <- xts(economics$psavert, order.by = economics$date)
eco_b <- xts(economics$unemploy/1000, order.by = economics$date)
eco2 <- cbind(eco_a, eco_b)
head(eco2)
colnames(eco2) <- c("psavert", "unemploy")
head(eco2)
dygraph(eco2) %>% dyRangeSelector()
##
library(httr)
library(rvest)
Sys.setlocale("LC_ALL", "English")
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = 'l',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(tail(data))
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(tail(data))
print(head(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '15',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
OrderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(tail(data))
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
orderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'N',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
View(data)
Sys.setlocale("LC_ALL", "English")  # set language in English
url = 'https://kind.krx.co.kr/disclosure/todaydisclosure.do'
data = POST(url, body =
list(
method = 'searchTodayDisclosureSub',
currentPageSize = '100',
pageIndex = '1',
orderMode = '0',
orderStat = 'D',
forward = 'todaydisclosure_sub',
chose = 'S',
todayFlag = 'Y',
selDate = '2018-12-28'
))
data = read_html(data) %>%
html_table(fill = TRUE) %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
print(head(data))
print(head(data))
print(head(data))
## Data Frame
(d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10)))
setwd("C:/Users/user/Desktop/Programming/R-programming/Data Processing and Analysis/Chapter 2")
## Data Frame
(d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10)))
(d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10), z = c('M','F','M','F','M')))
str(d)
?data.frame
(d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10), z = c('M','F','M','F','M'), stringsAsFactors = TRUE))
str(d)
d$x
d$x <- 6:10
d
d$w
d$w <- c("A","B","C","D","E")
d
str(d)
(x <-  data.frame(1:3))
colnames(x) <- c('val')
rownames(x) <- c('a','b','c')
# access the frame
d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10))
# access the frame
(d <- data.frame(x = c(1,2,3,4,5), y = c(2,4,6,8,10)))
d$x
d[1. ]
d[1, ]
d[1, 2]
d[c(1,3), 2]
d[-1, -2]
d[, c("x","y")]
d[, c("x")]
d[, c("x"), drop = FALSE]
(d <- data.frame(a = 1:3, b = 4:6, c = 7:9))
d[, names(d) %in% c("b","c")]
d[, !names(d) %in% c("a")]
d <- data.frame(x = 1:1000)
d
head(d)
tail(d)
View(d)
## Type Check and Change
class(c(1,2))
class(matrix(c(1,2)))
class(data.frame(x = c(1,2), y = c(3,4)))
str(c(1,2))
str(matrix(c(1,2)))
str(list(c(1,2)))
str(data.fram(x = c(1,2)))
str(data.frame(x = c(1,2)))
is.factor(facotr(c("m","f")))
is.factor(factor(c("m","f")))
is.numeric(1:5)
is.character(c("a","b"))
is.data.frame(data.frame(x = 1:5))
# change a type
x <- c("a","b","c")
x
class(x)
as.factor(x)
as.character(as.factor(x))
x <- matrix(1:9, ncol = 3)
x
as.data.frame(x)
(x <- data.frame(list(x = c(1,2), y = c(3,4))))
(x <- data.frame(matrix(c(1,2,3,4), ncol = 2)))
(x <- data.frame(list(x = c(1,2), y = c(3,4))))
factor(c("m", "f"), levels = c("m", "f"))
